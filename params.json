{"name":"Php-events","body":"PHP-Events is a php events system for PHP 5.4\r\n\r\nIt's based on traits, which means every class can implement the event system as easily as:\r\n\r\n```php\r\n<?php\r\nclass MyClass {\r\n    use Events;\r\n}\r\n```\r\n\r\nBinding and triggering events\r\n-----------------------------\r\n\r\n```php\r\n<?php\r\n$class = new MyClass();\r\n$class->bind(\"boom\", function() {\r\n    echo \"headshot\";\r\n});\r\n$class->trigger(\"boom\");\r\n```\r\n\r\nYou can also pass in arguments:\r\n\r\n```php\r\n<?php\r\n$class = new MyClass();\r\n$class->bind(\"hello\", function($name) {\r\n    echo \"hello \" . $name;\r\n});\r\n$class->trigger(\"hello\", \"Peeter\");\r\n```\r\n\r\nPriority and stopping event propagation \r\n---------------------------------------\r\n\r\nBy default, all events are triggered in the order they are binded. \r\nYou can change that by assiging a priority to an event, and returning false to stop propagation.\r\n\r\n```php\r\n<?php\r\n$class = new MyClass();\r\n$class->bind(\"hello\", function($name) {\r\n    echo \"hello \" . $name;\r\n});\r\n$class->bind(\"hello\", function($name) {\r\n    echo \"hello my dear sir \" . $name;\r\n    return false;\r\n    \r\n}, 2);\r\n$class->trigger(\"hello\", \"Peeter\");\r\n```\r\n\r\nWould produce\r\n\r\n<pre>\r\nhello my dear sir Peeter\r\n</pre>","tagline":"","google":"UA-30702736-1","note":"Don't delete this file! It's used internally to help with page regeneration."}